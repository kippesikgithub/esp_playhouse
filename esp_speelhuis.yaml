esphome:
  name: esp-speelhuis
  friendly_name: esp-speelhuis
  on_boot:
    priority: -100.0
    then:
      - delay: 1s
      - script.execute: test_ota
esp32:
  board: esp32-s2-saola-1
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "bxN5m7gR76rBCvB0yKzRomvPxuS3v8uQBh/ZT9i7PIQ="

ota:
  password: "221f93d93a5b40a36e2e0e27b4e20984"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  manual_ip:
    static_ip: 192.168.1.xxx
    gateway: 192.168.1.xxx
    subnet: 255.255.255.0
    dns1: 192.168.1.xxx

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp-Speelhuis Fallback Hotspot"
    password: !wifi_ota_passwd

captive_portal:

sensor:
  - platform: adc
    id: esp_speelhuis_battery_voltage 
    pin: GPIO4
    attenuation: auto
    name: Battery Voltage
    update_interval: 1s
    accuracy_decimals: 2
    filters:
      - multiply: 2
    #use moving median to smooth spikes
      - median:
          window_size: 10
          send_every: 10
          send_first_at: 10
      - delta: 0.01 #Only send values to HA if they change 
      - throttle: 30s #Limit values sent to Ha
#Convert the Voltage to a battery  level (%)
  - platform: copy
    source_id: esp_speelhuis_battery_voltage
    id: esp_speelhuis_battery_level
    icon: "mdi:battery"
    name: Battery Level
    unit_of_measurement: '%'
    accuracy_decimals: 2
    filters:
      - calibrate_linear:
      # Map from voltage to Battery level
          - 3.1 -> 0
          - 4.16 -> 100
      #Handle/cap boundaries
      - lambda: |
          if (x < 0) return 0; 
          else if (x > 100) return 100;
          else return (x);
      - delta: 0.5 #Only send values to HA if they change 
      - throttle: 30s #Limit values sent to Ha

switch:
  - platform: gpio
    pin: GPIO12
    name: "Speelhuis waterpomp" 
    id: esp_speelhuis_speelhuis_waterpomp

light:
  - platform: neopixelbus
    type: GRB
    variant: WS2811
    pin: GPIO8
    num_leds: 5
    name: "Speelhuis ledstrip"
    id: esp_speelhuis_speelhuis_ledstrip

binary_sensor:
  - platform: homeassistant
    id: otamode
    entity_id: input_boolean.esp_speelhuis_ota_update

button:  
  - platform: restart
    name: "Restart device"

script:
  - id: test_ota
    mode: queued
    then:
      - logger.log: "Checking OTA Mode"
      - if:
          condition:
            binary_sensor.is_on: otamode
          then:
            - logger.log: 'OTA Mode ON'
            - deep_sleep.prevent: deep_sleep_handler
          else:
            - logger.log: 'OTA Mode OFF'
            - deep_sleep.allow: deep_sleep_handler
      - delay: 2s
      - script.execute: test_ota

deep_sleep:
    id: deep_sleep_handler
    run_duration: 1min
    sleep_duration: 14min
